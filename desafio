#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

typedef struct {
    char nome[30];
    char cor[10];
    int tropas;
} Territorio;

void cadastrarTerritorios(Territorio* territorios, int n) {
    for (int i = 0; i < n; i++) {
        printf("--- Cadastrando Territorio %d ---\n", i + 1);
        printf("Nome do Territorio: ");
        scanf(" %[^\n]", territorios[i].nome);
        printf("Cor do Exercito: ");
        scanf(" %[^\n]", territorios[i].cor);
        printf("Numero de Tropas: ");
        scanf("%d", &territorios[i].tropas);
        printf("\n");
    }
}

void exibirTerritorios(Territorio* territorios, int n) {
    printf("==============================================\n");
    printf("          MAPA DO MUNDO - ESTADO ATUAL\n");
    printf("==============================================\n\n");
    for (int i = 0; i < n; i++) {
        printf("TERRITORIO %d:\n", i + 1);
        printf(" - Nome: %s\n", territorios[i].nome);
        printf(" - Dominado por: Exercito %s\n", territorios[i].cor);
        printf(" - Tropas: %d\n\n", territorios[i].tropas);
    }
}

void atacar(Territorio* atacante, Territorio* defensor) {
    int dadoAtacante = rand() % 6 + 1;
    int dadoDefensor = rand() % 6 + 1;
    printf("\nAtaque de %s (%s) contra %s (%s)\n", atacante->nome, atacante->cor, defensor->nome, defensor->cor);
    printf("Dado atacante: %d | Dado defensor: %d\n", dadoAtacante, dadoDefensor);

    if (dadoAtacante > dadoDefensor) {
        printf("O atacante venceu a batalha!\n");
        strcpy(defensor->cor, atacante->cor);
        defensor->tropas = atacante->tropas / 2;
    } else {
        printf("O defensor resistiu! O atacante perde uma tropa.\n");
        if (atacante->tropas > 0) atacante->tropas--;
    }
}

void liberarMemoria(Territorio* territorios) {
    free(territorios);
}

int main() {
    srand(time(NULL));
    int n, atk, def;
    printf("Quantos territorios deseja cadastrar? ");
    scanf("%d", &n);

    Territorio* territorios = (Territorio*)cal

